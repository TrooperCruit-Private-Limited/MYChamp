@page "/Responsibilities/Operational/{id?}"
@model OperationalModel

@{
    var isEdit = Model.Responsibility.Id != 0; 
    ViewData["Title"] = isEdit ? "Edit Responsibility" : "Create Responsibility";
}

<h2 class="mt-5">@ViewData["Title"]</h2>

<form method="post">

    <input type="hidden" asp-for="Responsibility.Id" />

    <div class="form-group">
        <label asp-for="Responsibility.ResponsibilityName"></label>
        <input asp-for="Responsibility.ResponsibilityName" class="form-control" />
        <span asp-validation-for="Responsibility.ResponsibilityName" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Responsibility.Description"></label>
        <textarea asp-for="Responsibility.Description" class="form-control"></textarea>
        <span asp-validation-for="Responsibility.Description" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">@((isEdit) ? "Save" : "Create")</button>    
    <a asp-page="/Responsibilities/Index" class="btn btn-secondary">Cancel</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
